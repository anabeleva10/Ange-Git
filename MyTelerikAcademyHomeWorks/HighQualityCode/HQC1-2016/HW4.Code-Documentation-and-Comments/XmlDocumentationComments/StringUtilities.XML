<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StringUtilities</name>
    </assembly>
    <members>
        <member name="T:StringUtilities.StringExtensions">
            <summary>
            The class provides extension methods for processing of strings.
            </summary>
        </member>
        <member name="M:StringUtilities.StringExtensions.ToMd5Hash(System.String)">
            <summary>
            The method hashes a string using MD5 algorithm.
            </summary>
            <param name="input">The input string.</param>
            <returns>MD5 hashed string.</returns>
        </member>
        <member name="M:StringUtilities.StringExtensions.ToBoolean(System.String)">
            <summary>
            The method checks if a string represents a true value.
            </summary>
            <param name="input">The string to be checked.</param>
            <returns>True if the string represents a true value; false otherwise.</returns>
        </member>
        <member name="M:StringUtilities.StringExtensions.ToShort(System.String)">
            <summary>
            The method converts a string to short value if the string represents a short integer value.
            </summary>
            <param name="input">The string to be converted.</param>
            <returns>Short value to which the string has  been converted.</returns>
        </member>
        <member name="M:StringUtilities.StringExtensions.ToInteger(System.String)">
            <summary>
            The method  converts a string to integer value if the string represents an integer value.
            </summary>
            <param name="input">The string to be converted.</param>
            <returns>Integer value to which the string has  been converted.</returns>
        </member>
        <member name="M:StringUtilities.StringExtensions.ToLong(System.String)">
            <summary>
            The method converts a string to long integer value if the string represents an integer value.
            </summary>
            <param name="input">The string to be converted.</param>
            <returns>Long integer value to which the string has been converted.</returns>
        </member>
        <member name="M:StringUtilities.StringExtensions.ToDateTime(System.String)">
            <summary>
            The method converts a string to DateTime value if the string represents a DateTime value.
            </summary>
            <param name="input">The string to be converted.</param>
            <returns>The DateTime value to which the string has been converted.</returns>
        </member>
        <member name="M:StringUtilities.StringExtensions.CapitalizeFirstLetter(System.String)">
            <summary>
            The method capitalizes the first letter of a string.
            </summary>
            <param name="input">The string to be processed.</param>
            <returns>The string with its first letter capitalized if the string is not null nor empty;
            String.Empty if the string is null or empty.</returns>
        </member>
        <member name="M:StringUtilities.StringExtensions.GetStringBetween(System.String,System.String,System.String,System.Int32)">
            <summary>
            The method gets the substring between two substrings in a string.
            </summary>
            <param name="input">The string to be processed.</param>
            <param name="startString">The start substring to be found.</param>
            <param name="endString">The end substring to be found.</param>
            <param name="startFrom">The position in the input string to start the search from.</param>
            <returns>The string with its first letter capitalized if the string is not null nor empty;
            String.Empty if the string is null or empty.</returns>
        </member>
        <member name="M:StringUtilities.StringExtensions.ConvertCyrillicToLatinLetters(System.String)">
            <summary>
            The method converts cyrillic letters to latin letters in a string.
            </summary>
            <param name="input">The string containing cyrillic letters to be converted.</param>
            <returns>The string with cyrillic letters replaced by corresponding latin letters.</returns>
        </member>
        <member name="M:StringUtilities.StringExtensions.ConvertLatinToCyrillicKeyboard(System.String)">
            <summary>
            The method converts latin letters to cyrillic letters in a string.
            </summary>
            <param name="input">The string containing latin letters to be converted.</param>
            <returns>The string with latin letters replaced by corresponding cyrillic letters.</returns>
        </member>
        <member name="M:StringUtilities.StringExtensions.ToValidUsername(System.String)">
            <summary>
            The method converts a string to valid user name which is composed 
            by alpha-numeric characters in latin with all '_', '.' and spaces removed.
            </summary>
            <param name="input">The input string to be converted to a valid user name.</param>
            <returns>String which is a valid user name.</returns>
        </member>
        <member name="M:StringUtilities.StringExtensions.ToValidLatinFileName(System.String)">
            <summary>
            The method converts a string to valid latin file name which is composed 
            by alpha-numeric characters in latin with all '_', '.', '-' and spaces removed.
            </summary>
            <param name="input">The input string to be converted to a valid latin file name.</param>
            <returns>A string which is a valid latin file name.</returns>
        </member>
        <member name="M:StringUtilities.StringExtensions.GetFirstCharacters(System.String,System.Int32)">
            <summary>
            The method creates a substring containing specified number of characters from the beginning of the string.
            </summary>
            <param name="input">The input string.</param>
            <param name="charsCount">The number of characters which are to be taken from the beginning.
            of the input string and put into the resulting substring. </param>
            <returns>Substring containing the specified number of characters
            taken from the beginning of the input string. </returns>
        </member>
        <member name="M:StringUtilities.StringExtensions.GetFileExtension(System.String)">
            <summary>
            The method gets the file extension from the name of a file.
            </summary>
            <param name="fileName">The name of the file with its extension.</param>
            <returns>The file extension.</returns>
        </member>
        <member name="M:StringUtilities.StringExtensions.ToContentType(System.String)">
            <summary>
            The method converts the content type of a file according to its name's extension.
            </summary>
            <param name="fileExtension">A string containing the file extension.</param>
            <returns>A string with the content type according to the file extension if known; 
            otherwise returns "application/octet-stream". </returns>
        </member>
        <member name="M:StringUtilities.StringExtensions.ToByteArray(System.String)">
            <summary>
            The method converts a string to an array of bytes.
            </summary>
            <param name="input">The string to be converted.</param>
            <returns>Array of bytes containing the characters of the input string in the same sequence.</returns>
        </member>
    </members>
</doc>
